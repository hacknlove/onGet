class t extends class{constructor(t,e={}){this.url=t,this.cached=e.firstValue,this.defaultValue=e.defaultValue,this.subscriptions=new Map,this.totalSubscriptionsCount=0}setValue(t){this.cached=t,this.triggerSubscriptions()}getValue(){return this.cached??this.defaultValue}triggerSubscriptions(){for(const t of this.subscriptions.values())t(this.value,this)}get value(){return this.getValue()}set value(t){this.setValue(t)}onChange(t){const e=this.totalSubscriptionsCount++;return this.subscriptions.set(e,t),()=>this.subscriptions.delete(e)}}{constructor(t,{method:e="GET",endpoint:s,headers:i,data:h,debounce:r=0,defaultError:o,...n},a){super(t,n),this.plugin=a,this.fetchOptions={method:e,endpoint:s,headers:i,defaultError:o,data:h},this.debounce=r}set endpoint(t){this.fetchOptions.endpoint=t,this.refresh()}set headers(t){this.fetchOptions.headers=t,this.refresh()}set method(t){this.fetchOptions.method=t,this.refresh()}set data(t){this.fetchOptions.data=t,this.fetchOptions.body=JSON.stringify(t),this.refresh()}async refresh(t){if(this.debounced&&clearTimeout(this.debounced),0===t)return this.value=await this.plugin.fetch(this.fetchOptions.endpoint,{method:this.method,headers:this.headers,body:this.body,defaultError:this.defaultValue}),void(this.interval&&setTimeout(this.refresh,this.interval,0));this.debounced=setTimeout(this.refresh,t||this.debounce,0)}}class e{constructor(t){this.sharedContext=t,this.headers={"content-type":"application/json"},this.defaultError={ok:!1}}newResource(e,s){return new t(e,s,this)}async fetch(t,e){return fetch(t,{headers:e.headers??this.headers,body:e.body??void 0!==e.data&&JSON.stringify(this.data)}).then(t=>t.json()).catch(()=>e.defaultError??this.defaultError).then(t=>(t.onGetUpdate&&Object.entries(t.onGetUpdate).forEach(([t,e])=>{const s=e?.__onGetOptions;s&&delete e.__onGetOptions,this.sharedContext.setValue(t,e,s)}),t))}}["GET","POST","PUT","PATCH","DELETE","OPTIONS","HEAD","CONNECT","TRACE"].forEach(t=>e.prototype[t]=function(t,e={}){return fetch(t,{method:"GET",...e})}),e.protocol="api";export default e;export{t as ApiResource};
